
@{
	Layout = "~/Views/Shared/_Layout.cshtml";

}


<head>
	<link href="~/Content/fixedColumns.dataTables.min.css" />
	<link href="~/Content/fixedHeader.dataTables.min.css" />

	<style>
		.select-mania-dropdown {
			position: relative !important;
		}
	</style>
</head>



@Html.Partial("_CobrosHeader", (SistemaImbrino.Models.VW_rptFinAtrasados)ViewBag.ListAtrasados)


<div class="row ">
	@{
		string classDisabled = ViewBag.isCobroTotal ? "disabled" : string.Empty;

	}
	<input type="hidden" id="Fecha_pago" value="@ViewBag.FechaPago" />
	<div class="col-sm-12 text-right pd-top-10">
		<a id="btn-HeaderCuotas" class="btn btn-warning pull-left" onclick="window.history.back();"><span class="glyphicon glyphicon-triangle-left"></span> Atras</a>
		<button id="btn-limpiar" class="btn btn-danger" onclick="document.location.reload();"><span class="glyphicon glyphicon-trash"></span> Limpiar</button>
		@if (classDisabled == "disabled")
		{
			<button class="btn btn-primary @classDisabled" disabled><span class="glyphicon glyphicon-credit-card"></span> Saldo total</button>
		}
		else
		{
			<button id="btn-cobroTotal_" class="btn btn-primary"><span class="glyphicon glyphicon-credit-card"></span> Saldo total</button>
		}

		<button id="btn-ProcesarCobro" class="btn btn-success"><span class="glyphicon glyphicon-shopping-cart"></span> Procesar Cobro</button>
	</div>

</div>
<div class="table-responsive">
	<table class="stripe row-border order-column" style="width:100%" id="tbl_detalleCuotasC">
		<thead class="btn-defaultColor">
			<tr>
				<th class="text-center" style="padding-right:7px;">Cuota</th>
				<th class="text-left">Vencimiento</th>
				<th class="text-right">Monto</th>
				<th class="text-center">Status</th>
				<th class="text-right" style="padding-right:7px;">Mora</th>
				<th class="text-center">Observaciones</th>
				<th class="text-center">Tipo Cuota</th>
				<th class="text-center">Tipo Pago</th>
			</tr>
		</thead>

		<tbody>

			@foreach (var CuotasVen in ViewBag.ListCuotasVencidas)
			{
				@Html.Partial("_CobrosDetalle", (SistemaImbrino.Models.sp_cuotasVencidas_Result)CuotasVen)
			}


		</tbody>


	</table>
	<div class="col-xs-12 text-center btn-defaultColor img-rounded">
		<p id="lblTotalGeneral" class="font-size-22"></p>
	</div>
</div>


<!--------------------------------------- Modal por cada cuota seleccionada ----------------------------------------------->
<div class="modal fade" id="CobroModal" tabindex="-1" data-backdrop="static" data-keyboard="false" data-url='@Url.Action("_popup_Cobro")' role="dialog" aria-labelledby="myModalLabel">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header bg-warning">
				<button type="button" class="close btn-cancelarCurrentCuota" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<h4 class="modal-title" id="myModalLabel"> </h4>
			</div>
			<div class="modal-body" id="CobroContainer">
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-success pull-left" id="btn-Guardar_cuota" data-loading-text="cargando...">Aplicar</button>
				<button type="button" class="btn btn-danger pull-right btn-cancelarCurrentCuota">Cancelar</button>

			</div>
		</div>
	</div>
</div>

<!--------------------------------------- Modal para Procesar el cobro completo ----------------------------------------------->
<div class="modal fade" id="ProcesarCobroModal" tabindex="-1" data-backdrop="static" data-keyboard="false" data-url='@Url.Action("Cobrar")' role="dialog" aria-labelledby="myModalLabel">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header bg-warning">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<h4 class="modal-title">
					C O B R O S
				</h4>
			</div>
			<div class="modal-body">
				@Html.Partial("_popup_ProcesarPago")
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-success pull-left" disabled id="btn-Cobrocompleto" data-loading-text="cargando...">Cobrar</button>
				<button type="button" class="btn btn-danger pull-right" data-dismiss="modal">Cancelar</button>

			</div>
		</div>
	</div>
</div>

<div class="modal fade" id="CobroTotalModal" tabindex="-1" data-backdrop="static" data-keyboard="false" data-url='@Url.Action("_popup_ProcesarPagoTotal")' role="dialog" aria-labelledby="myModalLabel">
	<div class="modal-dialog" role="document">
		<div class="modal-content">
			<div class="modal-header bg-warning">
				<button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<h4 class="modal-title" id="myModalLabelAll"> </h4>
			</div>
			<div class="modal-body" id="CobroContainerAll">
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-success pull-left" id="btn-GuardarAllCuotas" data-loading-text="cargando...">Aplicar</button>
				<button type="button" class="btn btn-danger pull-right" data-dismiss="modal">Close</button>

			</div>
		</div>
	</div>
</div>

<!--------------------------------------- Modal para generar depositos y tranferancias ----------------------------------------------->
<div class="modal fade" id="DepositoModal" tabindex="-1" data-backdrop="static" data-keyboard="false" role="dialog" aria-labelledby="myModalLabel">

	<div class="modal-dialog" role="document" style="width:1000px">
		<div class="modal-content">
			<div class="modal-header bg-warning">
				<button type="button" class="close btn-cerrar btn-cerrarPopupD" aria-label="Close"><span aria-hidden="true">&times;</span></button>
				<h4 class="modal-title">Crear deposito y tranferancia</h4>
			</div>
			<div class="modal-body">
				@Html.Action("_popup_create", "DebitosBancarios")
			</div>
			<div class="modal-footer">
				<button type="button" class="btn btn-success pull-left" id="btn-crearDeposito" data-loading-text="cargando...">Cobrar</button>
				<button type="button" class="btn btn-danger pull-right btn-cancelar btn-cerrarPopupD">Cancelar</button>
			</div>
		</div>
	</div>
</div>

@section scripts {
	<script src="~/Scripts/dataTables.fixedColumns.min.js"></script>
	<script src="~/Scripts/dataTables.fixedHeader.min.js"></script>

	<script type="text/javascript">
		var data = [];
		var OtrosDepositos = [];
		$(document).ready(function ()
		{


			HabilitarPrimeraceldaTabla();
			$(".dw-cobro").selectMania('update');
			const table = $('#tbl_detalleCuotasC').removeAttr('width').DataTable(
				{
					"searching": false,
					"lengthChange": false,
					"paging": false,
					"ordering": false,
					"info": false,
					responsive: true,
					scrollY: "250px",
					scrollX: true,
					scrollCollapse: true,
					columnDefs: [
						{ width: '30%', targets: 5 }
					]
				}
			);


			$(".btn-cerrarPopupD").click(function () {
				openModal("#DepositoModal", false);
				$("#modal_forma_pago").val("");
				$("#modal_forma_pago").trigger("change");
			})

			$("#btn-crearDeposito").click(function () {
				var _url = $("#ProcesarCobroModal").data('url');
				ProcesarCobros(_url,false,this);
			})
			$("#modal_forma_pago").change(function ()
			{
				$("#btn-Cobrocompleto").attr("disabled",true);
				var value = $(this).val();
				if (value === "")
				{

				}
				else if (value === "D" || value === "T")
				{
					mensajeMethodCreate(value);
				}
				else
				{
					$("#btn-Cobrocompleto").removeAttr("disabled");
				}
			});
			$("#BANCO").change(function ()
			{
				var valor = $(this).val();
				GetCuentasBancarias("CUENTA_BANCARIA", valor, "@Url.Action("GetCuentasBancarias", "DebitosBancarios")");
			});

			$(".dw-cobro").change(function (e) {

				var id_Cuota = $(this).attr('cuota');
				var id_tipo = $(this).val();
				var indice = 0;
				if (id_tipo == "0") {
					indice = data.length - 1;
					var object = removeItemArray(data);
					var index = $(object).attr("numCuota");
					$("#lbl-" + index).text("");

					$("#lblTotalGeneral").html("Total: " + number_format_js(calcularTotal(), 2, '.', ','));
				} else {
					var tipo_Cobro = "";
					if (id_tipo == "11") {
						tipo_Cobro = "Pago";
					} else if (id_tipo == "12") {
						tipo_Cobro = "Abono";
					} else if (id_tipo == "13") {
						tipo_Cobro = "Saldo incluye pago de mora";
					}
					else if (id_tipo == "15") {
						tipo_Cobro = "Saldo NO pago de la mora";
					}
					else if (id_tipo == "16") {
						tipo_Cobro = "Abono incluye pago de mora";
					}
					else if (id_tipo == "17") {
						tipo_Cobro = "Registrar mora como cargo";
					}
					else if (id_tipo == "18") {
						tipo_Cobro = "Abono NO pago de la mora";
					}
					else if (id_tipo == "20") {
						tipo_Cobro = "Saldo cuota";
					}
					else if (id_tipo == "21") {
						tipo_Cobro = "Abono a cuota";
					}
					else if (id_tipo == "22") {
						tipo_Cobro = "Saldo cargo adicional";
					}
					else if (id_tipo == "23") {
						tipo_Cobro = "Abono cargo adicional";
					}

					$("#myModalLabel").html(tipo_Cobro + " Cuota " + id_Cuota);
					var Modal = $('#CobroModal');
					var id_numFin = $('#Num_Fin').html();

					var Fecha_pago = $("#Fecha_pago").val();
					var url = Modal.data('url') + "?id_numFin=" + id_numFin + "&id_cuota=" + id_Cuota + "&tipo=" + tipo_Cobro + "&idIndex=" + indice + "&_Fecha_pago=" + Fecha_pago;


					$.get(url, function (data) {
						$('#CobroContainer').html(data);
						openModal("#CobroModal", true);

						// Desabilita las opciones que no necesitan usar el campo requerido
						if (id_tipo == "11" || id_tipo == "17" ) // Abono
						{
							$("#modal_monto").attr("disabled", true);
						}
						if (id_tipo == "22" || id_tipo == "23") // otros cargos
						{
							$("#modal_monto").attr("disabled", true);
							$("#lblMonto").text("Monto pendiente");
						}

						if (id_tipo == "15" || id_tipo == "18" || id_tipo == "21" || id_tipo == "20" || id_tipo == "16")
						{
							$("#modal_mora").attr("disabled", true);
						}
						if (id_tipo == "12") {
							$("#lblMonto").text("Monto a abonar a cuota");
						}
						if (id_tipo == "21") {
							$("#lblMonto").text("Monto a abonar a cuota");
						}
					});
				}
			});

			$("#btn-Guardar_cuota").click(function () {
				var modal_monto = $("#modal_monto");
				var modal_mora = $("#modal_mora");
				var observacion = "";
				var _numfin = $("#modal_numfin").val();
				var _numcuota = $("#modal_numcuota").val();
				var _monto = parseFloat(modal_monto.val().replace(/[^\d\.\-]/g, ""));
				var _mora = parseFloat(modal_mora.val().replace(/[^\d\.\-]/g, ""));
				var _tipoCobro = $("#modal_tipoCobro").val();
				var _otroCargo = 0;

				var TotalMonto = parseFloat(modal_monto.attr("max").replace(/[^\d\.\-]/g, ""));

				if (_monto == "0" && _mora == "0")
				{
					MessageNotification("Debe introducir un monto o mora a pagar", false);
					return;
				} else if (_monto > TotalMonto)
				{
					MessageNotification("El monto no puede exceder al monto total pendiente de pago", false);
					return;
				}
				else if (_mora >= TotalMonto && _tipoCobro == "Abono cargo adicional")
				{
					MessageNotification("El abono tiene que ser menor que la mora total pendiente de pago", false);
					return;
				}
				else if (_monto < 1 && _tipoCobro != "Registrar mora como cargo") {
					MessageNotification("El monto ingresados deben ser mayores a cero", false);
					return;
				}

				if (_tipoCobro == "Saldo cargo adicional" || _tipoCobro == "Abono cargo adicional")
				{
					_monto = 0;
					_otroCargo = _mora;
					_mora = 0;
				}
				if (_tipoCobro == "Registrar mora como cargo")
				{
					_otroCargo = _mora;
					_mora = 0;
				}

				var json = {
					tipoCobro: _tipoCobro
					, numCuota: _numcuota
					, numfin: _numfin
					, montoPagado: _monto
					, mora: _mora
					, otroCargo: _otroCargo
				}


				AddItemArray2(_numcuota, data, json);

				openModal("#CobroModal", false);

				if (_tipoCobro == "Pago" || _tipoCobro == "Saldo incluye pago de mora" || _tipoCobro == "Saldo modificar monto mora"
					|| _tipoCobro == "Saldo NO pago de la mora" || _tipoCobro == "Saldo cuota" || _tipoCobro == "Saldo cargo adicional"
					|| _tipoCobro == "Registrar mora como cargo"
				) {

					var currentRow = $("#tr-" + _numcuota).closest('tr');
					var nextRow = currentRow.next()[0];
					var idCurrentRow = $(currentRow[0]).attr("cuota");
					var idNextRow = $(nextRow).attr("cuota");

					$("#dw-" + idCurrentRow).attr("disabled", true);
					$("#dw-" + idCurrentRow).addClass("bg-warning");
					$("#dw-" + idNextRow).removeAttr("disabled");
				}

				var observacion = GenerarObservacion(_tipoCobro, _monto,_mora,_otroCargo);

				$("#lblTotalGeneral").html("Total: " + number_format_js(calcularTotal(), 2, '.', ','));
				console.log("Total: " + number_format_js(calcularTotal(), 2, '.', ','));

				$("#lbl-" + _numcuota).html(observacion);
				$("#lbl-" + _numcuota).addClass("text-primary");
				$(".dw-cobro").selectMania('update');

			});

			function GenerarObservacion(_tipoCobro, _monto, _mora = 0, _otroCargo = 0) {
				var observacion = "";
				var observacion_Mora = "";

				if (_mora > 0) {
					observacion_Mora = ", MORA $" + number_format_js(_mora, 0, '.', ',');
				}
				if (_tipoCobro == "Saldo cuota" || (_tipoCobro == "Saldo NO pago de la mora") || _tipoCobro == "Registrar mora como cargo") {
					observacion = "SALDO $" + number_format_js(_monto, 0, '.', ',');
				}
				else if
				(_tipoCobro == "Saldo cargo adicional") {
					observacion = "SALDO CARGO ADICIONAL $" + number_format_js(_otroCargo, 0, '.', ',');
				}
				else if
				(_tipoCobro == "Abono a cuota" || (_tipoCobro == "Abono NO pago de la mora")) {
					observacion = "ABONO $" + number_format_js(_monto, 0, '.', ',');
				}
				else if
				(_tipoCobro == "Abono cargo adicional") {
					observacion = "ABONO CARGO ADICIONAL $" + number_format_js(_otroCargo, 0, '.', ',');
				}
				else if
				(_tipoCobro == "Pago" || _tipoCobro == "Saldo incluye pago de mora") {
					observacion = "SALDO $" + number_format_js(_monto, 0, '.', ',') + observacion_Mora;
				}

				else if
				(_tipoCobro == "Abono" || _tipoCobro == "Abono incluye pago de mora") {
					observacion = "ABONO $" + number_format_js(_monto, 0, '.', ',') + observacion_Mora;
				}

				return observacion;
			}

			$("#btn-ProcesarCobro").click(function () {
				var numFin = "";
				var Subtotal = 0;
				var itebis = 0;
				var otroCargos = 0;
				var otroCargoAdicional = 0;

				if (data.length > 0) {
					data.forEach(function (index, key) {
						//Obtener Header key
						if (key == 0) {
							numFin = index.numfin;
						}
						Subtotal += index.montoPagado;
						otroCargos += index.mora;
						if (index.tipoCobro !== "Registrar mora como cargo") {
							otroCargoAdicional += index.otroCargo;
						}
					});


					openModal("#ProcesarCobroModal", true);

					LLenarDatosProcesarCobros(numFin, Subtotal, itebis, otroCargos, 0, 0, false, otroCargoAdicional);
				}
			});

			$("#btn-Cobrocompleto").click(function ()
			{
				var _url = $("#ProcesarCobroModal").data('url');
				isTotal = $("#modal_isTotal").val();
				if (isTotal == "true")
				{
					_url = "@Url.Action("cobroTotal")";
                }
				ProcesarCobros(_url, isTotal,this);
			});

			$("#btn-cobroTotal_").click(function ()
			{
				var tipo_Cobro = "Pago Completo";
				$("#myModalLabelAll").html(tipo_Cobro);
				var Modal = $('#CobroTotalModal');

				var id_numFin = $('#Num_Fin').html();
				var Fecha_pago = $("#Fecha_pago").val();
				var url = Modal.data('url') + "?_FinID=" + id_numFin + "&_Fecha_pago=" + Fecha_pago;

				$.get(url, function (data) {
					$('#CobroContainerAll').html(data);
					openModal("#CobroTotalModal", true);
				});
			});

			$('#CobroModal').on('shown.bs.modal', function (event) {
				var tipoPago = $("#modal_tipoCobro").val();
				if (
					tipoPago == "Saldo cuota"
					|| tipoPago == "Saldo incluye pago de mora"
					|| tipoPago == "Saldo NO pago de la mora"
					|| tipoPago == "Saldo cargo adicional"
				)
				{
					darClickAutomatico();
				}
			})

			$("#btn-GuardarAllCuotas").click(function ()
			{
				var modal_montodescuentoMora = $("#modal_descuentoMora");
				var modal_montodescuentoInt = $("#modal_descuentoInt");
				var totalMora = parseFloat(modal_montodescuentoMora.attr("max").replace(/[^\d\.\-]/g, ""));
				var TotalInteres = parseFloat(modal_montodescuentoInt.attr("max").replace(/[^\d\.\-]/g, ""));
				var montoMoraDesc = parseFloat(modal_montodescuentoMora.val().replace(/[^\d\.\-]/g, ""));
				var montoInteresDesc = parseFloat(modal_montodescuentoInt.val().replace(/[^\d\.\-]/g, ""));
				var numFin = $("#modal_finID").val();
				var MontoTotal = parseFloat($("#modal_MontoTotal").val().replace(/[^\d\.\-]/g, ""));
				var montoCargos = parseFloat($("#modal_MontoOtros").val().replace(/[^\d\.\-]/g, ""));


				if (montoInteresDesc > TotalInteres) {
					MessageNotification("El descuento de interes no puede exceder al monto total del interes pendiente de pago", false);
					return;
				}
				var numFin = numFin, Subtotal = MontoTotal, itebis = 0, otroCargos = totalMora ;

				openModal("#CobroTotalModal", false);
				openModal("#ProcesarCobroModal", true);
				LLenarDatosProcesarCobros(numFin, Subtotal, itebis, otroCargos, montoMoraDesc, montoInteresDesc, true, montoCargos);
			});

            $(".btn-cancelarCurrentCuota").click(function () {
                var idDrCuota = 'dw-' + $("#modal_numcuota").val();
                $("#"+idDrCuota).val(0);
                $('#CobroModal').modal('hide');
			})

			$("#modal_descuentoMora").blur(function () {
				validarNumero(this);
			});
	});

		// Hacer el clik automatico en aceptar ya que el cliente no requiere modificar ningun valor
		function darClickAutomatico()
		{
			$("#btn-Guardar_cuota").trigger("click");
		}

		//Borrar item de un array
        function removeItemArray(array) {
			var index = array.pop();
			return index;
		}

		function mensajeMethodCreate(idTipoDebito)
		{
			var idTipoDebito = idTipoDebito === "D" ? 1 : 2;
			openModal("#DepositoModal", true);
			GetBancos("BANCO","@Url.Action("getBancos","DebitosBancarios")");
			GetTipoDebito("TIPO_DEBITO", "@Url.Action("GetTipoDebito", "DebitosBancarios")");
			GetTipoEntrada("TIPO_ENTRADA", "@Url.Action("GetTipoEntrada", "DebitosBancarios")");

			$("#FECHA").attr("disabled", true);
			$("#FECHA").val($("#Fecha_pago").val());
			$("#TIPO_ENTRADA").attr("disabled", true);
			$("#TIPO_ENTRADA").addClass("disabled");
			$("#TIPO_ENTRADA").val(idTipoDebito);

			$("#MONTO").attr("disabled", true);
			$("#MONTO").val($("#modal_lblTotal").text());
			$("#TIPO_DEBITO").attr("disabled", true);
			$("#TIPO_DEBITO").val(1);

			updateSelectMania("TIPO_DEBITO");
			updateSelectMania("TIPO_ENTRADA");

		}
		// LLenar datos en el popup de procesar los cobros
		function LLenarDatosProcesarCobros(numFin, Subtotal, itebis, otroCargos, descuentoMora = 0,descuentoInteres = 0,istotal = false,otrosCargoAdicional = 0) {
			let date = new Date();
			var descuento = descuentoMora + descuentoInteres;
			var sumMontos = (Subtotal + otroCargos + itebis + otrosCargoAdicional);
			var total = sumMontos - descuento;
			var subTotal = sumMontos;

			$("#modal_lblFin").html(numFin);
			$("#modal_lblfecha").html(date.toDateString());
            $("#modal_lblDescuento").html(number_format_js(descuento, 2, '.', ','));
            $("#modal_lblSubtotal").html(number_format_js(Subtotal, 2, '.', ','));
			$("#modal_lblotros_cargos").html(number_format_js(otroCargos, 2, '.', ','));
			$("#modal_lblotros_cargosA").html(number_format_js(otrosCargoAdicional, 2, '.', ','));
            $("#modal_lblTotal").html(number_format_js(total, 2, '.', ','));
			$("#modal_descMora").val(descuentoMora);
			$("#modal_descInt").val(descuentoInteres);
            $("#modal_isTotal").val(istotal);
            $("#modal_lblsub").html(number_format_js(subTotal, 2, '.', ','));
		}

		// Calcular total de cuotas
		function calcularTotal(notCargos = false)
		{
			var total = 0;
			var Subtotal = 0;
			var otroCargos = 0;
			var otroCargosAdiccionales = 0;

			if (data.length > 0) {
				data.forEach(function (index, key) {
					//Obtener Header key
					if (key == 0) {
						numFin = index.numfin;
					}
					Subtotal += index.montoPagado;
					otroCargos += index.mora;
					if (index.tipoCobro !== "Registrar mora como cargo") {
						otroCargosAdiccionales += index.otroCargo;
					}
				});

				total = (Subtotal + otroCargos);
				if (!notCargos) {
					total += otroCargosAdiccionales;
				}

			}
			return total;
		}

		// Cobrar Cuotas seleccionadas
		function ProcesarCobros(url, isTotal = "false",btn)
		{

			var tipo_Pago = $("#modal_forma_pago").val();
			var descMora = parseFloat($("#modal_descMora").val().replace(/[^\d\.\-]/g, ""));
			var descInt = parseFloat($("#modal_descInt").val().replace(/[^\d\.\-]/g, ""));
            var lblNumFin = $("#modal_lblFin").text();
			var Fecha_pago = $("#Fecha_pago").val();
			var modal_aumento_recibo = $("#modal_aumento_recibo").val();

			if (tipo_Pago === "D" || tipo_Pago === "T" ) {
				insertarDeposito();
			}
			if (isTotal == "true")
			{
				$.ajax({

					type: "POST",
					url: url,
					dataType: "json",
					data: {
						_numFin: lblNumFin
						, descuentoInte: descInt
						, descuentoMora: descMora
						, tipoPago: tipo_Pago
						, _Fecha_pago: Fecha_pago
					},
					success: function (_data) {
						MessageNotificationImprimir(_data, btn, lblNumFin);
					}
				});
			}
			else
			{
				var strDatos = JSON.stringify({ Cobros: data });

				$.ajax({
					type: "POST",
					url: url,
					dataType: "json",
					data: {
						json: strDatos
						, tipoPago: tipo_Pago
						, _Fecha_pago: Fecha_pago
						, aumentoRecibo: modal_aumento_recibo
						, jsonDeposito: JSON.stringify(OtrosDepositos)
					},
					success: function (_data)
					{
						MessageNotificationImprimir(_data, btn, lblNumFin);
						//MessageNotification(_data.Message, _data.Is_Success, true, false, "@Url.Action("Index2", "CobrosHeader")" + "?findID=" + lblNumFin);
					}
				});
			}
		}

		function MessageNotificationImprimir(_data, btn, lblNumFin) {
			Swal.fire({
				title: 'Deseas imprimir el recibo de ingreso?',
				showDenyButton: true,
				showCancelButton: false,
				confirmButtonText: `SI`,
				denyButtonText: `NO`,
			}).then((result) => {
				/* Read more about isConfirmed, isDenied below */
				if (result.isConfirmed) {
					ImprimirReporte(_data.NumRecibo, btn,lblNumFin);
				} else if (result.isDenied) {
					MessageNotification(_data.Message, _data.Is_Success, true, false, "@Url.Action("Index2", "CobrosHeader")" + "?findID=" + lblNumFin);
				}
			});
		}
		function insertarDeposito()
		{
			var _BANCO = $("#BANCO").val();
			var _CUENTA_BANCARIA = $("#CUENTA_BANCARIA").val();
			var _TIPO_ENTRADA = $("#TIPO_ENTRADA").val();
			var _TIPO_DEBITO = $("#TIPO_DEBITO").val();
			var _MONTO = $("#MONTO").val().replace(",","").trim();
			var _FECHA = $("#FECHA").val().trim();
			var _CONCEPTO = $("#CONCEPTO").val().trim();


			if (_BANCO == "0" || _CUENTA_BANCARIA == "0" ||
				_TIPO_ENTRADA == "0" || _MONTO == "" ||
				_MONTO == "0" || _FECHA == "" ||
				_CONCEPTO == "" || _TIPO_DEBITO == "0"
				)
			{
				MessageNotification("Todos los campos son obligatorios favor rellenar todos los campos", false);
				return;
			}

			OtrosDepositos = [];
			OtrosDepositos =
				{
					 BANCO: _BANCO
					, CUENTA_BANCARIA: _CUENTA_BANCARIA
					, TIPO_ENTRADA: _TIPO_ENTRADA
					, TIPO_DEBITO: _TIPO_DEBITO
					, MONTO: _MONTO
					, FECHA: _FECHA
					, CONCEPTO: _CONCEPTO
				}
		}

		function HabilitarPrimeraceldaTabla() {

			$("#tbl_detalleCuotasC tbody tr:nth(0)").find("select").removeAttr("disabled");
		}

		function ImprimirReporte(ReciboID, currentBtn, lblNumFin ="")
		{
				var url = "@Url.Action("PrintReport")";
			var $btn = $(currentBtn).button('loading');

                $.ajax({
                    type: "POST",
                    url: url,
                    dataType: "json",
					data: { ReciboID: ReciboID},
                    success: function (_data) {
						if (_data.Is_Success) {
                            var url = "@Url.Action("generateReport")";
							window.open(url, "_new");
							window.location.href = "@Url.Action("Index2", "CobrosHeader")" + "?findID=" + lblNumFin;

                        } else {
							MessageNotification(_data.Message, _data.Is_Success, true);
                        }
					},
					complete: function () {
						//$btn.button('reset');
					}
                });
		}
		function openModal(id, open) {
			Show_closeModal(id, open);
			$("input").blur(function () {
				debugger;
				validarNumero(this);
			});
		}
	</script>
}
